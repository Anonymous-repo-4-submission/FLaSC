2025-05-19 23:47:48,431 [trainer.py] => Starting new run
2025-05-19 23:47:48,431 [trainer.py] => ID: 1
2025-05-19 23:47:48,431 [trainer.py] => dataset: cifar224
2025-05-19 23:47:48,432 [trainer.py] => shuffle: True
2025-05-19 23:47:48,432 [trainer.py] => init_cls: 10
2025-05-19 23:47:48,432 [trainer.py] => increment: 10
2025-05-19 23:47:48,432 [trainer.py] => model_name: adapter
2025-05-19 23:47:48,432 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 23:47:48,432 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 23:47:48,432 [trainer.py] => seed: 1993
2025-05-19 23:47:48,432 [trainer.py] => batch_size: 50
2025-05-19 23:47:48,432 [trainer.py] => tuned_epoch: 20
2025-05-19 23:47:48,432 [trainer.py] => body_lr: 0.01
2025-05-19 23:47:48,432 [trainer.py] => head_lr: 0.01
2025-05-19 23:47:48,432 [trainer.py] => weight_decay: 0.0005
2025-05-19 23:47:48,432 [trainer.py] => min_lr: 0.0
2025-05-19 23:47:48,432 [trainer.py] => use_RP: True
2025-05-19 23:47:48,432 [trainer.py] => M: 10000
2025-05-19 23:47:48,432 [trainer.py] => use_input_norm: False
2025-05-19 23:47:48,432 [trainer.py] => meta: True
2025-05-19 23:47:48,432 [trainer.py] => exp_details: FLaSc
2025-05-19 23:47:48,432 [trainer.py] => do_not_save: False
2025-05-19 23:47:48,432 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed8.txt
2025-05-19 23:47:48,432 [trainer.py] => class_samples_seed: 8
2025-05-19 23:47:48,432 [trainer.py] => shot: 1
2025-05-19 23:47:50,252 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 23:47:50,544 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 23:47:51,518 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 23:47:51,532 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 23:47:52,471 [FLaSc.py] => Starting CIL Task 1
2025-05-19 23:47:52,471 [FLaSc.py] => Learning on classes 0-9
2025-05-19 23:47:52,473 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:47:52,473 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:47:52,473 [FLaSc.py] => len_test data : 1000
2025-05-19 23:47:52,474 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:47:52,533 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 23:47:52,534 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 23:47:52,535 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 23:47:52,535 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 23:47:52,535 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:49:59,845 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 0.873, Train_accy 0.00, Test_accy 7.80
2025-05-19 23:50:11,381 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:50:11,985 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:50:11,985 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:50:16,461 [trainer.py] => Group Accuracies after this task: {'00-09': 76.9}
2025-05-19 23:50:16,461 [trainer.py] => Ave Acc curve: [76.9]
2025-05-19 23:50:16,461 [trainer.py] => Ave Inc Acc curve: 76.9
2025-05-19 23:50:16,461 [trainer.py] => Top1 curve: [76.9]
2025-05-19 23:50:16,462 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:50:16,462 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:50:16,466 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:50:16,466 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:50:16,466 [FLaSc.py] => len_test data : 2000
2025-05-19 23:50:16,467 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:50:27,481 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:50:28,072 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:50:28,073 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:50:36,235 [trainer.py] => Group Accuracies after this task: {'00-09': 70.5, '10-19': 71.9}
2025-05-19 23:50:36,235 [trainer.py] => Ave Acc curve: [76.9, 71.2]
2025-05-19 23:50:36,235 [trainer.py] => Ave Inc Acc curve: 74.05000000000001
2025-05-19 23:50:36,235 [trainer.py] => Top1 curve: [76.9, 71.2]
2025-05-19 23:50:36,236 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:50:36,236 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:50:36,242 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:50:36,242 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:50:36,242 [FLaSc.py] => len_test data : 3000
2025-05-19 23:50:36,243 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:50:47,231 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:50:47,827 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:50:47,828 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:50:58,887 [trainer.py] => Group Accuracies after this task: {'00-09': 67.3, '10-19': 66.6, '20-29': 88.6}
2025-05-19 23:50:58,887 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17]
2025-05-19 23:50:58,887 [trainer.py] => Ave Inc Acc curve: 74.09000000000002
2025-05-19 23:50:58,887 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17]
2025-05-19 23:50:58,888 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:50:58,888 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:50:58,898 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:50:58,898 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:50:58,898 [FLaSc.py] => len_test data : 4000
2025-05-19 23:50:58,899 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:51:10,002 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:51:10,596 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:51:10,596 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:51:24,154 [trainer.py] => Group Accuracies after this task: {'00-09': 62.4, '10-19': 64.8, '20-29': 84.7, '30-39': 64.1}
2025-05-19 23:51:24,154 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0]
2025-05-19 23:51:24,154 [trainer.py] => Ave Inc Acc curve: 72.81750000000001
2025-05-19 23:51:24,154 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0]
2025-05-19 23:51:24,155 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:51:24,155 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:51:24,167 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:51:24,167 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:51:24,167 [FLaSc.py] => len_test data : 5000
2025-05-19 23:51:24,167 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:51:35,351 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:51:35,950 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:51:35,950 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:51:52,331 [trainer.py] => Group Accuracies after this task: {'00-09': 59.3, '10-19': 60.0, '20-29': 83.3, '30-39': 61.3, '40-49': 61.4}
2025-05-19 23:51:52,331 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06]
2025-05-19 23:51:52,331 [trainer.py] => Ave Inc Acc curve: 71.266
2025-05-19 23:51:52,331 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06]
2025-05-19 23:51:52,332 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:51:52,332 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:51:52,346 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:51:52,346 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:51:52,346 [FLaSc.py] => len_test data : 6000
2025-05-19 23:51:52,347 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:52:03,470 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:52:04,077 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:52:04,078 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:52:23,001 [trainer.py] => Group Accuracies after this task: {'00-09': 57.3, '10-19': 58.3, '20-29': 78.8, '30-39': 61.1, '40-49': 57.6, '50-59': 63.7}
2025-05-19 23:52:23,001 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8]
2025-05-19 23:52:23,001 [trainer.py] => Ave Inc Acc curve: 69.855
2025-05-19 23:52:23,001 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8]
2025-05-19 23:52:23,002 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:52:23,002 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:52:23,018 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:52:23,019 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:52:23,019 [FLaSc.py] => len_test data : 7000
2025-05-19 23:52:23,019 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:52:34,220 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:52:34,823 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:52:34,824 [FLaSc.py] => 700,001 training parameters.
2025-05-19 23:52:56,272 [trainer.py] => Group Accuracies after this task: {'00-09': 55.9, '10-19': 57.1, '20-29': 78.8, '30-39': 61.1, '40-49': 57.4, '50-59': 57.3, '60-69': 72.5}
2025-05-19 23:52:56,272 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87]
2025-05-19 23:52:56,272 [trainer.py] => Ave Inc Acc curve: 68.85714285714286
2025-05-19 23:52:56,272 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87]
2025-05-19 23:52:56,273 [FLaSc.py] => Starting CIL Task 8
2025-05-19 23:52:56,273 [FLaSc.py] => Learning on classes 70-79
2025-05-19 23:52:56,293 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:52:56,293 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:52:56,293 [FLaSc.py] => len_test data : 8000
2025-05-19 23:52:56,293 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:53:07,486 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:53:08,089 [FLaSc.py] => 87,788,289 total parameters.
2025-05-19 23:53:08,090 [FLaSc.py] => 800,001 training parameters.
2025-05-19 23:53:32,224 [trainer.py] => Group Accuracies after this task: {'00-09': 55.2, '10-19': 57.3, '20-29': 75.3, '30-39': 59.8, '40-49': 57.1, '50-59': 52.5, '60-69': 68.7, '70-79': 46.0}
2025-05-19 23:53:32,224 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99]
2025-05-19 23:53:32,224 [trainer.py] => Ave Inc Acc curve: 67.62375
2025-05-19 23:53:32,224 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99]
2025-05-19 23:53:32,225 [FLaSc.py] => Starting CIL Task 9
2025-05-19 23:53:32,225 [FLaSc.py] => Learning on classes 80-89
2025-05-19 23:53:32,243 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:53:32,244 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:53:32,244 [FLaSc.py] => len_test data : 9000
2025-05-19 23:53:32,244 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:53:43,386 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:53:43,991 [FLaSc.py] => 87,888,289 total parameters.
2025-05-19 23:53:43,992 [FLaSc.py] => 900,001 training parameters.
2025-05-19 23:54:10,758 [trainer.py] => Group Accuracies after this task: {'00-09': 54.5, '10-19': 56.3, '20-29': 73.8, '30-39': 59.7, '40-49': 55.2, '50-59': 51.8, '60-69': 67.6, '70-79': 44.6, '80-89': 36.3}
2025-05-19 23:54:10,758 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99, 55.53]
2025-05-19 23:54:10,758 [trainer.py] => Ave Inc Acc curve: 66.28
2025-05-19 23:54:10,758 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99, 55.53]
2025-05-19 23:54:10,759 [FLaSc.py] => Starting CIL Task 10
2025-05-19 23:54:10,759 [FLaSc.py] => Learning on classes 90-99
2025-05-19 23:54:10,782 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:54:10,782 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:54:10,782 [FLaSc.py] => len_test data : 10000
2025-05-19 23:54:10,782 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:54:22,017 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:54:22,616 [FLaSc.py] => 87,988,289 total parameters.
2025-05-19 23:54:22,617 [FLaSc.py] => 1,000,001 training parameters.
2025-05-19 23:54:52,020 [trainer.py] => Group Accuracies after this task: {'00-09': 53.6, '10-19': 55.1, '20-29': 73.8, '30-39': 59.7, '40-49': 54.1, '50-59': 48.5, '60-69': 66.6, '70-79': 43.6, '80-89': 36.8, '90-99': 59.6}
2025-05-19 23:54:52,020 [trainer.py] => Ave Acc curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99, 55.53, 55.14]
2025-05-19 23:54:52,020 [trainer.py] => Ave Inc Acc curve: 65.166
2025-05-19 23:54:52,020 [trainer.py] => Top1 curve: [76.9, 71.2, 74.17, 69.0, 65.06, 62.8, 62.87, 58.99, 55.53, 55.14]
2025-05-19 23:54:52,020 [trainer.py] => Finishing run
2025-05-19 23:54:52,020 [trainer.py] => 
