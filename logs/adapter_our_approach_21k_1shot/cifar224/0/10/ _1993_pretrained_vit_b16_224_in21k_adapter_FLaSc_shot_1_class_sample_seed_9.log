2025-05-19 23:54:54,552 [trainer.py] => Starting new run
2025-05-19 23:54:54,552 [trainer.py] => ID: 1
2025-05-19 23:54:54,552 [trainer.py] => dataset: cifar224
2025-05-19 23:54:54,552 [trainer.py] => shuffle: True
2025-05-19 23:54:54,552 [trainer.py] => init_cls: 10
2025-05-19 23:54:54,552 [trainer.py] => increment: 10
2025-05-19 23:54:54,552 [trainer.py] => model_name: adapter
2025-05-19 23:54:54,552 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 23:54:54,553 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 23:54:54,553 [trainer.py] => seed: 1993
2025-05-19 23:54:54,553 [trainer.py] => batch_size: 50
2025-05-19 23:54:54,553 [trainer.py] => tuned_epoch: 20
2025-05-19 23:54:54,553 [trainer.py] => body_lr: 0.01
2025-05-19 23:54:54,553 [trainer.py] => head_lr: 0.01
2025-05-19 23:54:54,553 [trainer.py] => weight_decay: 0.0005
2025-05-19 23:54:54,553 [trainer.py] => min_lr: 0.0
2025-05-19 23:54:54,553 [trainer.py] => use_RP: True
2025-05-19 23:54:54,553 [trainer.py] => M: 10000
2025-05-19 23:54:54,553 [trainer.py] => use_input_norm: False
2025-05-19 23:54:54,553 [trainer.py] => meta: True
2025-05-19 23:54:54,553 [trainer.py] => exp_details: FLaSc
2025-05-19 23:54:54,553 [trainer.py] => do_not_save: False
2025-05-19 23:54:54,553 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed9.txt
2025-05-19 23:54:54,553 [trainer.py] => class_samples_seed: 9
2025-05-19 23:54:54,553 [trainer.py] => shot: 1
2025-05-19 23:54:56,244 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 23:54:56,739 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 23:54:57,720 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 23:54:57,734 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 23:54:58,668 [FLaSc.py] => Starting CIL Task 1
2025-05-19 23:54:58,668 [FLaSc.py] => Learning on classes 0-9
2025-05-19 23:54:58,670 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:54:58,670 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:54:58,670 [FLaSc.py] => len_test data : 1000
2025-05-19 23:54:58,670 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:54:58,730 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 23:54:58,731 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 23:54:58,731 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 23:54:58,732 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 23:54:58,732 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:57:05,822 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 0.800, Train_accy 0.00, Test_accy 7.10
2025-05-19 23:57:17,234 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:57:17,831 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:57:17,832 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:57:22,434 [trainer.py] => Group Accuracies after this task: {'00-09': 77.4}
2025-05-19 23:57:22,434 [trainer.py] => Ave Acc curve: [77.4]
2025-05-19 23:57:22,434 [trainer.py] => Ave Inc Acc curve: 77.4
2025-05-19 23:57:22,434 [trainer.py] => Top1 curve: [77.4]
2025-05-19 23:57:22,434 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:57:22,435 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:57:22,439 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:57:22,439 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:57:22,439 [FLaSc.py] => len_test data : 2000
2025-05-19 23:57:22,439 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:57:33,547 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:57:34,150 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:57:34,151 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:57:42,643 [trainer.py] => Group Accuracies after this task: {'00-09': 70.2, '10-19': 84.7}
2025-05-19 23:57:42,643 [trainer.py] => Ave Acc curve: [77.4, 77.45]
2025-05-19 23:57:42,643 [trainer.py] => Ave Inc Acc curve: 77.42500000000001
2025-05-19 23:57:42,643 [trainer.py] => Top1 curve: [77.4, 77.45]
2025-05-19 23:57:42,644 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:57:42,644 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:57:42,651 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:57:42,651 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:57:42,651 [FLaSc.py] => len_test data : 3000
2025-05-19 23:57:42,651 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:57:53,707 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:57:54,317 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:57:54,317 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:58:05,294 [trainer.py] => Group Accuracies after this task: {'00-09': 66.8, '10-19': 81.9, '20-29': 79.6}
2025-05-19 23:58:05,295 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1]
2025-05-19 23:58:05,295 [trainer.py] => Ave Inc Acc curve: 76.98333333333333
2025-05-19 23:58:05,295 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1]
2025-05-19 23:58:05,295 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:58:05,295 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:58:05,305 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:58:05,305 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:58:05,305 [FLaSc.py] => len_test data : 4000
2025-05-19 23:58:05,306 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:58:16,454 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:58:17,059 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:58:17,060 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:58:30,906 [trainer.py] => Group Accuracies after this task: {'00-09': 66.6, '10-19': 71.1, '20-29': 78.4, '30-39': 65.9}
2025-05-19 23:58:30,906 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5]
2025-05-19 23:58:30,906 [trainer.py] => Ave Inc Acc curve: 75.36250000000001
2025-05-19 23:58:30,906 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5]
2025-05-19 23:58:30,907 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:58:30,907 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:58:30,919 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:58:30,919 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:58:30,919 [FLaSc.py] => len_test data : 5000
2025-05-19 23:58:30,919 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:58:42,140 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:58:42,742 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:58:42,743 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:58:59,054 [trainer.py] => Group Accuracies after this task: {'00-09': 64.0, '10-19': 67.6, '20-29': 71.9, '30-39': 63.7, '40-49': 78.7}
2025-05-19 23:58:59,054 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18]
2025-05-19 23:58:59,054 [trainer.py] => Ave Inc Acc curve: 74.126
2025-05-19 23:58:59,054 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18]
2025-05-19 23:58:59,055 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:58:59,055 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:58:59,069 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:58:59,070 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:58:59,070 [FLaSc.py] => len_test data : 6000
2025-05-19 23:58:59,070 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:59:10,209 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:59:10,811 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:59:10,812 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:59:29,755 [trainer.py] => Group Accuracies after this task: {'00-09': 62.9, '10-19': 66.8, '20-29': 70.8, '30-39': 63.7, '40-49': 76.4, '50-59': 55.2}
2025-05-19 23:59:29,755 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97]
2025-05-19 23:59:29,755 [trainer.py] => Ave Inc Acc curve: 72.76666666666667
2025-05-19 23:59:29,755 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97]
2025-05-19 23:59:29,756 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:59:29,756 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:59:29,773 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:59:29,773 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:59:29,774 [FLaSc.py] => len_test data : 7000
2025-05-19 23:59:29,774 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:59:41,011 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:59:41,617 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:59:41,618 [FLaSc.py] => 700,001 training parameters.
2025-05-20 00:00:03,192 [trainer.py] => Group Accuracies after this task: {'00-09': 60.5, '10-19': 64.8, '20-29': 69.7, '30-39': 61.6, '40-49': 75.7, '50-59': 51.1, '60-69': 63.6}
2025-05-20 00:00:03,193 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86]
2025-05-20 00:00:03,193 [trainer.py] => Ave Inc Acc curve: 71.49428571428572
2025-05-20 00:00:03,193 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86]
2025-05-20 00:00:03,193 [FLaSc.py] => Starting CIL Task 8
2025-05-20 00:00:03,194 [FLaSc.py] => Learning on classes 70-79
2025-05-20 00:00:03,213 [FLaSc.py] => len_supervised data : 10
2025-05-20 00:00:03,213 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-20 00:00:03,213 [FLaSc.py] => len_test data : 8000
2025-05-20 00:00:03,213 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-20 00:00:14,643 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-20 00:00:15,265 [FLaSc.py] => 87,788,289 total parameters.
2025-05-20 00:00:15,265 [FLaSc.py] => 800,001 training parameters.
2025-05-20 00:00:39,435 [trainer.py] => Group Accuracies after this task: {'00-09': 59.1, '10-19': 63.9, '20-29': 68.8, '30-39': 61.2, '40-49': 73.2, '50-59': 40.8, '60-69': 59.9, '70-79': 53.6}
2025-05-20 00:00:39,435 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06]
2025-05-20 00:00:39,435 [trainer.py] => Ave Inc Acc curve: 70.065
2025-05-20 00:00:39,435 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06]
2025-05-20 00:00:39,436 [FLaSc.py] => Starting CIL Task 9
2025-05-20 00:00:39,436 [FLaSc.py] => Learning on classes 80-89
2025-05-20 00:00:39,454 [FLaSc.py] => len_supervised data : 10
2025-05-20 00:00:39,455 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-20 00:00:39,455 [FLaSc.py] => len_test data : 9000
2025-05-20 00:00:39,455 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-20 00:00:50,609 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-20 00:00:51,223 [FLaSc.py] => 87,888,289 total parameters.
2025-05-20 00:00:51,223 [FLaSc.py] => 900,001 training parameters.
2025-05-20 00:01:17,914 [trainer.py] => Group Accuracies after this task: {'00-09': 55.9, '10-19': 60.1, '20-29': 66.4, '30-39': 60.4, '40-49': 71.7, '50-59': 39.7, '60-69': 59.3, '70-79': 51.6, '80-89': 53.2}
2025-05-20 00:01:17,915 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06, 57.59]
2025-05-20 00:01:17,915 [trainer.py] => Ave Inc Acc curve: 68.67888888888889
2025-05-20 00:01:17,915 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06, 57.59]
2025-05-20 00:01:17,915 [FLaSc.py] => Starting CIL Task 10
2025-05-20 00:01:17,916 [FLaSc.py] => Learning on classes 90-99
2025-05-20 00:01:17,934 [FLaSc.py] => len_supervised data : 10
2025-05-20 00:01:17,934 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-20 00:01:17,934 [FLaSc.py] => len_test data : 10000
2025-05-20 00:01:17,934 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-20 00:01:29,134 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-20 00:01:29,750 [FLaSc.py] => 87,988,289 total parameters.
2025-05-20 00:01:29,750 [FLaSc.py] => 1,000,001 training parameters.
2025-05-20 00:01:59,231 [trainer.py] => Group Accuracies after this task: {'00-09': 54.2, '10-19': 59.5, '20-29': 66.0, '30-39': 59.7, '40-49': 69.9, '50-59': 38.9, '60-69': 57.4, '70-79': 50.7, '80-89': 51.0, '90-99': 37.7}
2025-05-20 00:01:59,231 [trainer.py] => Ave Acc curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06, 57.59, 54.5]
2025-05-20 00:01:59,231 [trainer.py] => Ave Inc Acc curve: 67.261
2025-05-20 00:01:59,231 [trainer.py] => Top1 curve: [77.4, 77.45, 76.1, 70.5, 69.18, 65.97, 63.86, 60.06, 57.59, 54.5]
2025-05-20 00:01:59,231 [trainer.py] => Finishing run
2025-05-20 00:01:59,231 [trainer.py] => 
