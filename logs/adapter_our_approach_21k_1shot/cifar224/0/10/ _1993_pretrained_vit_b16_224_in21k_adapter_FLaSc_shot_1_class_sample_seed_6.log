2025-05-19 23:33:35,701 [trainer.py] => Starting new run
2025-05-19 23:33:35,701 [trainer.py] => ID: 1
2025-05-19 23:33:35,702 [trainer.py] => dataset: cifar224
2025-05-19 23:33:35,702 [trainer.py] => shuffle: True
2025-05-19 23:33:35,702 [trainer.py] => init_cls: 10
2025-05-19 23:33:35,702 [trainer.py] => increment: 10
2025-05-19 23:33:35,702 [trainer.py] => model_name: adapter
2025-05-19 23:33:35,702 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 23:33:35,702 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 23:33:35,702 [trainer.py] => seed: 1993
2025-05-19 23:33:35,702 [trainer.py] => batch_size: 50
2025-05-19 23:33:35,702 [trainer.py] => tuned_epoch: 20
2025-05-19 23:33:35,702 [trainer.py] => body_lr: 0.01
2025-05-19 23:33:35,702 [trainer.py] => head_lr: 0.01
2025-05-19 23:33:35,702 [trainer.py] => weight_decay: 0.0005
2025-05-19 23:33:35,702 [trainer.py] => min_lr: 0.0
2025-05-19 23:33:35,702 [trainer.py] => use_RP: True
2025-05-19 23:33:35,702 [trainer.py] => M: 10000
2025-05-19 23:33:35,702 [trainer.py] => use_input_norm: False
2025-05-19 23:33:35,702 [trainer.py] => meta: True
2025-05-19 23:33:35,702 [trainer.py] => exp_details: FLaSc
2025-05-19 23:33:35,702 [trainer.py] => do_not_save: False
2025-05-19 23:33:35,702 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed6.txt
2025-05-19 23:33:35,702 [trainer.py] => class_samples_seed: 6
2025-05-19 23:33:35,702 [trainer.py] => shot: 1
2025-05-19 23:33:37,255 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 23:33:39,949 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 23:33:40,933 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 23:33:40,948 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 23:33:41,884 [FLaSc.py] => Starting CIL Task 1
2025-05-19 23:33:41,885 [FLaSc.py] => Learning on classes 0-9
2025-05-19 23:33:41,887 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:33:41,887 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:33:41,887 [FLaSc.py] => len_test data : 1000
2025-05-19 23:33:41,887 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:33:41,947 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 23:33:41,947 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 23:33:41,948 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 23:33:41,948 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 23:33:41,948 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:35:48,887 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 1.086, Train_accy 0.00, Test_accy 7.90
2025-05-19 23:36:00,192 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:36:00,790 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:36:00,791 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:36:05,410 [trainer.py] => Group Accuracies after this task: {'00-09': 84.7}
2025-05-19 23:36:05,410 [trainer.py] => Ave Acc curve: [84.7]
2025-05-19 23:36:05,410 [trainer.py] => Ave Inc Acc curve: 84.7
2025-05-19 23:36:05,410 [trainer.py] => Top1 curve: [84.7]
2025-05-19 23:36:05,410 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:36:05,410 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:36:05,415 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:36:05,415 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:36:05,415 [FLaSc.py] => len_test data : 2000
2025-05-19 23:36:05,415 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:36:16,377 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:36:16,979 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:36:16,980 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:36:25,152 [trainer.py] => Group Accuracies after this task: {'00-09': 79.8, '10-19': 69.3}
2025-05-19 23:36:25,153 [trainer.py] => Ave Acc curve: [84.7, 74.55]
2025-05-19 23:36:25,153 [trainer.py] => Ave Inc Acc curve: 79.625
2025-05-19 23:36:25,153 [trainer.py] => Top1 curve: [84.7, 74.55]
2025-05-19 23:36:25,153 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:36:25,153 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:36:25,160 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:36:25,160 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:36:25,160 [FLaSc.py] => len_test data : 3000
2025-05-19 23:36:25,160 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:36:36,139 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:36:36,736 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:36:36,737 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:36:47,673 [trainer.py] => Group Accuracies after this task: {'00-09': 70.8, '10-19': 64.2, '20-29': 64.5}
2025-05-19 23:36:47,673 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5]
2025-05-19 23:36:47,673 [trainer.py] => Ave Inc Acc curve: 75.25
2025-05-19 23:36:47,673 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5]
2025-05-19 23:36:47,674 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:36:47,674 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:36:47,684 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:36:47,684 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:36:47,684 [FLaSc.py] => len_test data : 4000
2025-05-19 23:36:47,684 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:36:58,802 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:36:59,393 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:36:59,393 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:37:13,089 [trainer.py] => Group Accuracies after this task: {'00-09': 66.6, '10-19': 58.3, '20-29': 59.8, '30-39': 79.4}
2025-05-19 23:37:13,089 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03]
2025-05-19 23:37:13,089 [trainer.py] => Ave Inc Acc curve: 72.945
2025-05-19 23:37:13,089 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03]
2025-05-19 23:37:13,090 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:37:13,090 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:37:13,102 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:37:13,102 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:37:13,102 [FLaSc.py] => len_test data : 5000
2025-05-19 23:37:13,102 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:37:24,293 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:37:24,896 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:37:24,897 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:37:41,225 [trainer.py] => Group Accuracies after this task: {'00-09': 63.5, '10-19': 56.7, '20-29': 57.0, '30-39': 79.0, '40-49': 64.5}
2025-05-19 23:37:41,225 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14]
2025-05-19 23:37:41,226 [trainer.py] => Ave Inc Acc curve: 71.184
2025-05-19 23:37:41,226 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14]
2025-05-19 23:37:41,226 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:37:41,226 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:37:41,240 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:37:41,240 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:37:41,240 [FLaSc.py] => len_test data : 6000
2025-05-19 23:37:41,240 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:37:52,353 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:37:52,950 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:37:52,950 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:38:11,720 [trainer.py] => Group Accuracies after this task: {'00-09': 59.2, '10-19': 54.7, '20-29': 56.9, '30-39': 78.7, '40-49': 63.8, '50-59': 61.4}
2025-05-19 23:38:11,720 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45]
2025-05-19 23:38:11,720 [trainer.py] => Ave Inc Acc curve: 69.72833333333332
2025-05-19 23:38:11,720 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45]
2025-05-19 23:38:11,721 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:38:11,721 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:38:11,737 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:38:11,738 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:38:11,738 [FLaSc.py] => len_test data : 7000
2025-05-19 23:38:11,738 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:38:22,888 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:38:23,488 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:38:23,489 [FLaSc.py] => 700,001 training parameters.
2025-05-19 23:38:45,038 [trainer.py] => Group Accuracies after this task: {'00-09': 56.1, '10-19': 53.2, '20-29': 56.4, '30-39': 77.7, '40-49': 63.1, '50-59': 60.6, '60-69': 65.1}
2025-05-19 23:38:45,038 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74]
2025-05-19 23:38:45,038 [trainer.py] => Ave Inc Acc curve: 68.58714285714285
2025-05-19 23:38:45,038 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74]
2025-05-19 23:38:45,039 [FLaSc.py] => Starting CIL Task 8
2025-05-19 23:38:45,039 [FLaSc.py] => Learning on classes 70-79
2025-05-19 23:38:45,060 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:38:45,060 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:38:45,060 [FLaSc.py] => len_test data : 8000
2025-05-19 23:38:45,060 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:38:56,263 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:38:56,867 [FLaSc.py] => 87,788,289 total parameters.
2025-05-19 23:38:56,868 [FLaSc.py] => 800,001 training parameters.
2025-05-19 23:39:21,098 [trainer.py] => Group Accuracies after this task: {'00-09': 54.8, '10-19': 52.0, '20-29': 55.1, '30-39': 77.1, '40-49': 62.1, '50-59': 58.3, '60-69': 63.1, '70-79': 41.5}
2025-05-19 23:39:21,098 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0]
2025-05-19 23:39:21,098 [trainer.py] => Ave Inc Acc curve: 67.26375
2025-05-19 23:39:21,098 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0]
2025-05-19 23:39:21,099 [FLaSc.py] => Starting CIL Task 9
2025-05-19 23:39:21,099 [FLaSc.py] => Learning on classes 80-89
2025-05-19 23:39:21,118 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:39:21,119 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:39:21,119 [FLaSc.py] => len_test data : 9000
2025-05-19 23:39:21,119 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:39:32,219 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:39:32,825 [FLaSc.py] => 87,888,289 total parameters.
2025-05-19 23:39:32,825 [FLaSc.py] => 900,001 training parameters.
2025-05-19 23:39:59,466 [trainer.py] => Group Accuracies after this task: {'00-09': 52.9, '10-19': 50.3, '20-29': 53.1, '30-39': 76.8, '40-49': 61.0, '50-59': 57.7, '60-69': 62.6, '70-79': 40.7, '80-89': 53.7}
2025-05-19 23:39:59,466 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0, 56.53]
2025-05-19 23:39:59,466 [trainer.py] => Ave Inc Acc curve: 66.07111111111111
2025-05-19 23:39:59,466 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0, 56.53]
2025-05-19 23:39:59,467 [FLaSc.py] => Starting CIL Task 10
2025-05-19 23:39:59,467 [FLaSc.py] => Learning on classes 90-99
2025-05-19 23:39:59,487 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:39:59,487 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:39:59,487 [FLaSc.py] => len_test data : 10000
2025-05-19 23:39:59,488 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:40:10,592 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:40:11,197 [FLaSc.py] => 87,988,289 total parameters.
2025-05-19 23:40:11,198 [FLaSc.py] => 1,000,001 training parameters.
2025-05-19 23:40:40,531 [trainer.py] => Group Accuracies after this task: {'00-09': 51.0, '10-19': 49.6, '20-29': 52.4, '30-39': 74.7, '40-49': 59.9, '50-59': 57.3, '60-69': 61.9, '70-79': 40.5, '80-89': 52.8, '90-99': 53.8}
2025-05-19 23:40:40,531 [trainer.py] => Ave Acc curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0, 56.53, 55.39]
2025-05-19 23:40:40,531 [trainer.py] => Ave Inc Acc curve: 65.003
2025-05-19 23:40:40,531 [trainer.py] => Top1 curve: [84.7, 74.55, 66.5, 66.03, 64.14, 62.45, 61.74, 58.0, 56.53, 55.39]
2025-05-19 23:40:40,531 [trainer.py] => Finishing run
2025-05-19 23:40:40,531 [trainer.py] => 
