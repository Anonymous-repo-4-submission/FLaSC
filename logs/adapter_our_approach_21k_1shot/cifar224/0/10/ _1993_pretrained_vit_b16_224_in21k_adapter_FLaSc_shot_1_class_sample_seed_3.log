2025-05-19 23:12:17,949 [trainer.py] => Starting new run
2025-05-19 23:12:17,950 [trainer.py] => ID: 1
2025-05-19 23:12:17,950 [trainer.py] => dataset: cifar224
2025-05-19 23:12:17,950 [trainer.py] => shuffle: True
2025-05-19 23:12:17,950 [trainer.py] => init_cls: 10
2025-05-19 23:12:17,950 [trainer.py] => increment: 10
2025-05-19 23:12:17,950 [trainer.py] => model_name: adapter
2025-05-19 23:12:17,950 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 23:12:17,950 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 23:12:17,950 [trainer.py] => seed: 1993
2025-05-19 23:12:17,950 [trainer.py] => batch_size: 50
2025-05-19 23:12:17,950 [trainer.py] => tuned_epoch: 20
2025-05-19 23:12:17,951 [trainer.py] => body_lr: 0.01
2025-05-19 23:12:17,951 [trainer.py] => head_lr: 0.01
2025-05-19 23:12:17,951 [trainer.py] => weight_decay: 0.0005
2025-05-19 23:12:17,951 [trainer.py] => min_lr: 0.0
2025-05-19 23:12:17,951 [trainer.py] => use_RP: True
2025-05-19 23:12:17,951 [trainer.py] => M: 10000
2025-05-19 23:12:17,951 [trainer.py] => use_input_norm: False
2025-05-19 23:12:17,951 [trainer.py] => meta: True
2025-05-19 23:12:17,951 [trainer.py] => exp_details: FLaSc
2025-05-19 23:12:17,951 [trainer.py] => do_not_save: False
2025-05-19 23:12:17,951 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed3.txt
2025-05-19 23:12:17,951 [trainer.py] => class_samples_seed: 3
2025-05-19 23:12:17,951 [trainer.py] => shot: 1
2025-05-19 23:12:19,678 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 23:12:19,999 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 23:12:20,970 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 23:12:20,985 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 23:12:21,905 [FLaSc.py] => Starting CIL Task 1
2025-05-19 23:12:21,906 [FLaSc.py] => Learning on classes 0-9
2025-05-19 23:12:21,907 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:12:21,908 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:12:21,908 [FLaSc.py] => len_test data : 1000
2025-05-19 23:12:21,908 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:12:21,967 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 23:12:21,968 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 23:12:21,969 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 23:12:21,969 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 23:12:21,969 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:14:28,569 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 1.164, Train_accy 0.00, Test_accy 7.70
2025-05-19 23:14:39,802 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:14:40,399 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:14:40,400 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:14:44,900 [trainer.py] => Group Accuracies after this task: {'00-09': 80.4}
2025-05-19 23:14:44,900 [trainer.py] => Ave Acc curve: [80.4]
2025-05-19 23:14:44,900 [trainer.py] => Ave Inc Acc curve: 80.4
2025-05-19 23:14:44,900 [trainer.py] => Top1 curve: [80.4]
2025-05-19 23:14:44,900 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:14:44,900 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:14:44,905 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:14:44,905 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:14:44,905 [FLaSc.py] => len_test data : 2000
2025-05-19 23:14:44,906 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:14:55,886 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:14:56,480 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:14:56,480 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:15:04,698 [trainer.py] => Group Accuracies after this task: {'00-09': 71.5, '10-19': 82.3}
2025-05-19 23:15:04,698 [trainer.py] => Ave Acc curve: [80.4, 76.9]
2025-05-19 23:15:04,698 [trainer.py] => Ave Inc Acc curve: 78.65
2025-05-19 23:15:04,698 [trainer.py] => Top1 curve: [80.4, 76.9]
2025-05-19 23:15:04,699 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:15:04,699 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:15:04,706 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:15:04,706 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:15:04,706 [FLaSc.py] => len_test data : 3000
2025-05-19 23:15:04,706 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:15:15,829 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:15:16,436 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:15:16,437 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:15:27,544 [trainer.py] => Group Accuracies after this task: {'00-09': 60.6, '10-19': 78.0, '20-29': 80.4}
2025-05-19 23:15:27,544 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0]
2025-05-19 23:15:27,544 [trainer.py] => Ave Inc Acc curve: 76.76666666666667
2025-05-19 23:15:27,544 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0]
2025-05-19 23:15:27,545 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:15:27,545 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:15:27,555 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:15:27,555 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:15:27,555 [FLaSc.py] => len_test data : 4000
2025-05-19 23:15:27,555 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:15:38,588 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:15:39,182 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:15:39,183 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:15:52,919 [trainer.py] => Group Accuracies after this task: {'00-09': 55.4, '10-19': 75.0, '20-29': 78.1, '30-39': 67.4}
2025-05-19 23:15:52,919 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97]
2025-05-19 23:15:52,919 [trainer.py] => Ave Inc Acc curve: 74.8175
2025-05-19 23:15:52,919 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97]
2025-05-19 23:15:52,920 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:15:52,920 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:15:52,932 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:15:52,932 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:15:52,932 [FLaSc.py] => len_test data : 5000
2025-05-19 23:15:52,932 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:16:03,996 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:16:04,593 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:16:04,594 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:16:21,028 [trainer.py] => Group Accuracies after this task: {'00-09': 51.3, '10-19': 74.1, '20-29': 73.5, '30-39': 63.6, '40-49': 61.1}
2025-05-19 23:16:21,028 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72]
2025-05-19 23:16:21,028 [trainer.py] => Ave Inc Acc curve: 72.798
2025-05-19 23:16:21,028 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72]
2025-05-19 23:16:21,029 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:16:21,029 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:16:21,044 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:16:21,044 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:16:21,044 [FLaSc.py] => len_test data : 6000
2025-05-19 23:16:21,045 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:16:32,169 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:16:32,771 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:16:32,771 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:16:51,693 [trainer.py] => Group Accuracies after this task: {'00-09': 49.9, '10-19': 73.3, '20-29': 67.7, '30-39': 62.7, '40-49': 56.4, '50-59': 60.3}
2025-05-19 23:16:51,693 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72]
2025-05-19 23:16:51,693 [trainer.py] => Ave Inc Acc curve: 70.95166666666667
2025-05-19 23:16:51,693 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72]
2025-05-19 23:16:51,694 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:16:51,694 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:16:51,711 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:16:51,711 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:16:51,711 [FLaSc.py] => len_test data : 7000
2025-05-19 23:16:51,711 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:17:02,910 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:17:03,513 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:17:03,514 [FLaSc.py] => 700,001 training parameters.
2025-05-19 23:17:25,265 [trainer.py] => Group Accuracies after this task: {'00-09': 49.3, '10-19': 67.4, '20-29': 65.5, '30-39': 56.7, '40-49': 52.5, '50-59': 56.6, '60-69': 69.6}
2025-05-19 23:17:25,265 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66]
2025-05-19 23:17:25,265 [trainer.py] => Ave Inc Acc curve: 69.33857142857143
2025-05-19 23:17:25,265 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66]
2025-05-19 23:17:25,266 [FLaSc.py] => Starting CIL Task 8
2025-05-19 23:17:25,266 [FLaSc.py] => Learning on classes 70-79
2025-05-19 23:17:25,285 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:17:25,285 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:17:25,285 [FLaSc.py] => len_test data : 8000
2025-05-19 23:17:25,285 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:17:36,488 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:17:37,092 [FLaSc.py] => 87,788,289 total parameters.
2025-05-19 23:17:37,092 [FLaSc.py] => 800,001 training parameters.
2025-05-19 23:18:01,208 [trainer.py] => Group Accuracies after this task: {'00-09': 48.5, '10-19': 67.1, '20-29': 64.8, '30-39': 56.8, '40-49': 52.5, '50-59': 42.6, '60-69': 66.8, '70-79': 46.3}
2025-05-19 23:18:01,208 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68]
2025-05-19 23:18:01,208 [trainer.py] => Ave Inc Acc curve: 67.63125
2025-05-19 23:18:01,208 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68]
2025-05-19 23:18:01,209 [FLaSc.py] => Starting CIL Task 9
2025-05-19 23:18:01,209 [FLaSc.py] => Learning on classes 80-89
2025-05-19 23:18:01,230 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:18:01,230 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:18:01,230 [FLaSc.py] => len_test data : 9000
2025-05-19 23:18:01,230 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:18:12,360 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:18:12,961 [FLaSc.py] => 87,888,289 total parameters.
2025-05-19 23:18:12,962 [FLaSc.py] => 900,001 training parameters.
2025-05-19 23:18:39,793 [trainer.py] => Group Accuracies after this task: {'00-09': 48.1, '10-19': 64.6, '20-29': 63.1, '30-39': 56.4, '40-49': 50.6, '50-59': 40.7, '60-69': 67.6, '70-79': 43.5, '80-89': 62.0}
2025-05-19 23:18:39,793 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68, 55.18]
2025-05-19 23:18:39,793 [trainer.py] => Ave Inc Acc curve: 66.24777777777777
2025-05-19 23:18:39,793 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68, 55.18]
2025-05-19 23:18:39,794 [FLaSc.py] => Starting CIL Task 10
2025-05-19 23:18:39,794 [FLaSc.py] => Learning on classes 90-99
2025-05-19 23:18:39,815 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:18:39,815 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:18:39,815 [FLaSc.py] => len_test data : 10000
2025-05-19 23:18:39,816 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:18:50,980 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:18:51,575 [FLaSc.py] => 87,988,289 total parameters.
2025-05-19 23:18:51,576 [FLaSc.py] => 1,000,001 training parameters.
2025-05-19 23:19:21,005 [trainer.py] => Group Accuracies after this task: {'00-09': 47.3, '10-19': 64.7, '20-29': 61.5, '30-39': 55.0, '40-49': 50.0, '50-59': 41.0, '60-69': 64.8, '70-79': 43.5, '80-89': 61.3, '90-99': 40.6}
2025-05-19 23:19:21,005 [trainer.py] => Ave Acc curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68, 55.18, 52.97]
2025-05-19 23:19:21,005 [trainer.py] => Ave Inc Acc curve: 64.91999999999999
2025-05-19 23:19:21,005 [trainer.py] => Top1 curve: [80.4, 76.9, 73.0, 68.97, 64.72, 61.72, 59.66, 55.68, 55.18, 52.97]
2025-05-19 23:19:21,005 [trainer.py] => Finishing run
2025-05-19 23:19:21,005 [trainer.py] => 
