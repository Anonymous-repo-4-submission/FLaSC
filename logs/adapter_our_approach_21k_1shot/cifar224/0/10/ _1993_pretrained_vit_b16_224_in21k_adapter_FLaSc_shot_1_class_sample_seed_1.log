2025-05-19 22:58:08,920 [trainer.py] => Starting new run
2025-05-19 22:58:08,920 [trainer.py] => ID: 1
2025-05-19 22:58:08,920 [trainer.py] => dataset: cifar224
2025-05-19 22:58:08,920 [trainer.py] => shuffle: True
2025-05-19 22:58:08,920 [trainer.py] => init_cls: 10
2025-05-19 22:58:08,920 [trainer.py] => increment: 10
2025-05-19 22:58:08,920 [trainer.py] => model_name: adapter
2025-05-19 22:58:08,920 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 22:58:08,921 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 22:58:08,921 [trainer.py] => seed: 1993
2025-05-19 22:58:08,921 [trainer.py] => batch_size: 50
2025-05-19 22:58:08,921 [trainer.py] => tuned_epoch: 20
2025-05-19 22:58:08,921 [trainer.py] => body_lr: 0.01
2025-05-19 22:58:08,921 [trainer.py] => head_lr: 0.01
2025-05-19 22:58:08,921 [trainer.py] => weight_decay: 0.0005
2025-05-19 22:58:08,921 [trainer.py] => min_lr: 0.0
2025-05-19 22:58:08,921 [trainer.py] => use_RP: True
2025-05-19 22:58:08,921 [trainer.py] => M: 10000
2025-05-19 22:58:08,921 [trainer.py] => use_input_norm: False
2025-05-19 22:58:08,921 [trainer.py] => meta: True
2025-05-19 22:58:08,921 [trainer.py] => exp_details: FLaSc
2025-05-19 22:58:08,921 [trainer.py] => do_not_save: False
2025-05-19 22:58:08,921 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed1.txt
2025-05-19 22:58:08,921 [trainer.py] => class_samples_seed: 1
2025-05-19 22:58:08,921 [trainer.py] => shot: 1
2025-05-19 22:58:10,803 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 22:58:11,363 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 22:58:12,337 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 22:58:12,352 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 22:58:13,294 [FLaSc.py] => Starting CIL Task 1
2025-05-19 22:58:13,294 [FLaSc.py] => Learning on classes 0-9
2025-05-19 22:58:13,296 [FLaSc.py] => len_supervised data : 10
2025-05-19 22:58:13,296 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 22:58:13,296 [FLaSc.py] => len_test data : 1000
2025-05-19 22:58:13,296 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 22:58:13,355 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 22:58:13,356 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 22:58:13,356 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 22:58:13,356 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 22:58:13,357 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:00:19,813 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 0.914, Train_accy 0.00, Test_accy 7.40
2025-05-19 23:00:31,092 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:00:31,687 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:00:31,688 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:00:36,144 [trainer.py] => Group Accuracies after this task: {'00-09': 83.5}
2025-05-19 23:00:36,144 [trainer.py] => Ave Acc curve: [83.5]
2025-05-19 23:00:36,144 [trainer.py] => Ave Inc Acc curve: 83.5
2025-05-19 23:00:36,144 [trainer.py] => Top1 curve: [83.5]
2025-05-19 23:00:36,145 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:00:36,145 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:00:36,149 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:00:36,149 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:00:36,149 [FLaSc.py] => len_test data : 2000
2025-05-19 23:00:36,150 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:00:47,134 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:00:47,732 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:00:47,732 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:00:55,906 [trainer.py] => Group Accuracies after this task: {'00-09': 75.4, '10-19': 77.0}
2025-05-19 23:00:55,906 [trainer.py] => Ave Acc curve: [83.5, 76.2]
2025-05-19 23:00:55,906 [trainer.py] => Ave Inc Acc curve: 79.85
2025-05-19 23:00:55,906 [trainer.py] => Top1 curve: [83.5, 76.2]
2025-05-19 23:00:55,907 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:00:55,907 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:00:55,913 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:00:55,914 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:00:55,914 [FLaSc.py] => len_test data : 3000
2025-05-19 23:00:55,914 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:01:06,903 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:01:07,497 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:01:07,498 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:01:18,587 [trainer.py] => Group Accuracies after this task: {'00-09': 72.1, '10-19': 75.3, '20-29': 79.1}
2025-05-19 23:01:18,587 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5]
2025-05-19 23:01:18,587 [trainer.py] => Ave Inc Acc curve: 78.39999999999999
2025-05-19 23:01:18,587 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5]
2025-05-19 23:01:18,588 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:01:18,588 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:01:18,598 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:01:18,598 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:01:18,598 [FLaSc.py] => len_test data : 4000
2025-05-19 23:01:18,598 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:01:29,680 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:01:30,280 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:01:30,281 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:01:43,971 [trainer.py] => Group Accuracies after this task: {'00-09': 66.3, '10-19': 72.0, '20-29': 75.9, '30-39': 66.2}
2025-05-19 23:01:43,971 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1]
2025-05-19 23:01:43,971 [trainer.py] => Ave Inc Acc curve: 76.32499999999999
2025-05-19 23:01:43,971 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1]
2025-05-19 23:01:43,972 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:01:43,972 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:01:43,985 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:01:43,985 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:01:43,985 [FLaSc.py] => len_test data : 5000
2025-05-19 23:01:43,985 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:01:55,070 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:01:55,665 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:01:55,665 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:02:11,973 [trainer.py] => Group Accuracies after this task: {'00-09': 63.0, '10-19': 70.5, '20-29': 75.0, '30-39': 62.0, '40-49': 60.2}
2025-05-19 23:02:11,973 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14]
2025-05-19 23:02:11,973 [trainer.py] => Ave Inc Acc curve: 74.28799999999998
2025-05-19 23:02:11,973 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14]
2025-05-19 23:02:11,974 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:02:11,974 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:02:11,991 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:02:11,991 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:02:11,991 [FLaSc.py] => len_test data : 6000
2025-05-19 23:02:11,992 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:02:23,012 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:02:23,608 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:02:23,609 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:02:42,441 [trainer.py] => Group Accuracies after this task: {'00-09': 58.3, '10-19': 69.3, '20-29': 74.0, '30-39': 60.9, '40-49': 57.6, '50-59': 68.7}
2025-05-19 23:02:42,441 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8]
2025-05-19 23:02:42,441 [trainer.py] => Ave Inc Acc curve: 72.70666666666666
2025-05-19 23:02:42,441 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8]
2025-05-19 23:02:42,442 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:02:42,442 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:02:42,459 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:02:42,459 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:02:42,459 [FLaSc.py] => len_test data : 7000
2025-05-19 23:02:42,459 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:02:53,537 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:02:54,140 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:02:54,141 [FLaSc.py] => 700,001 training parameters.
2025-05-19 23:03:15,776 [trainer.py] => Group Accuracies after this task: {'00-09': 57.5, '10-19': 67.2, '20-29': 74.2, '30-39': 60.1, '40-49': 57.2, '50-59': 65.2, '60-69': 65.1}
2025-05-19 23:03:15,776 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79]
2025-05-19 23:03:15,777 [trainer.py] => Ave Inc Acc curve: 71.43285714285715
2025-05-19 23:03:15,777 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79]
2025-05-19 23:03:15,778 [FLaSc.py] => Starting CIL Task 8
2025-05-19 23:03:15,778 [FLaSc.py] => Learning on classes 70-79
2025-05-19 23:03:15,801 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:03:15,801 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:03:15,801 [FLaSc.py] => len_test data : 8000
2025-05-19 23:03:15,801 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:03:26,845 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:03:27,449 [FLaSc.py] => 87,788,289 total parameters.
2025-05-19 23:03:27,450 [FLaSc.py] => 800,001 training parameters.
2025-05-19 23:03:51,557 [trainer.py] => Group Accuracies after this task: {'00-09': 58.2, '10-19': 65.8, '20-29': 74.3, '30-39': 58.9, '40-49': 54.2, '50-59': 64.0, '60-69': 63.5, '70-79': 50.9}
2025-05-19 23:03:51,557 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22]
2025-05-19 23:03:51,557 [trainer.py] => Ave Inc Acc curve: 70.15625
2025-05-19 23:03:51,557 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22]
2025-05-19 23:03:51,558 [FLaSc.py] => Starting CIL Task 9
2025-05-19 23:03:51,558 [FLaSc.py] => Learning on classes 80-89
2025-05-19 23:03:51,579 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:03:51,579 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:03:51,579 [FLaSc.py] => len_test data : 9000
2025-05-19 23:03:51,579 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:04:02,706 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:04:03,305 [FLaSc.py] => 87,888,289 total parameters.
2025-05-19 23:04:03,306 [FLaSc.py] => 900,001 training parameters.
2025-05-19 23:04:30,062 [trainer.py] => Group Accuracies after this task: {'00-09': 56.1, '10-19': 64.5, '20-29': 73.9, '30-39': 58.6, '40-49': 52.5, '50-59': 63.0, '60-69': 62.7, '70-79': 50.5, '80-89': 64.3}
2025-05-19 23:04:30,062 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22, 60.68]
2025-05-19 23:04:30,062 [trainer.py] => Ave Inc Acc curve: 69.10333333333332
2025-05-19 23:04:30,062 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22, 60.68]
2025-05-19 23:04:30,063 [FLaSc.py] => Starting CIL Task 10
2025-05-19 23:04:30,063 [FLaSc.py] => Learning on classes 90-99
2025-05-19 23:04:30,086 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:04:30,086 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:04:30,086 [FLaSc.py] => len_test data : 10000
2025-05-19 23:04:30,086 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:04:41,207 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:04:41,811 [FLaSc.py] => 87,988,289 total parameters.
2025-05-19 23:04:41,812 [FLaSc.py] => 1,000,001 training parameters.
2025-05-19 23:05:11,165 [trainer.py] => Group Accuracies after this task: {'00-09': 55.5, '10-19': 63.4, '20-29': 71.2, '30-39': 58.9, '40-49': 49.2, '50-59': 62.7, '60-69': 62.3, '70-79': 46.9, '80-89': 64.4, '90-99': 61.6}
2025-05-19 23:05:11,165 [trainer.py] => Ave Acc curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22, 60.68, 59.61]
2025-05-19 23:05:11,165 [trainer.py] => Ave Inc Acc curve: 68.154
2025-05-19 23:05:11,165 [trainer.py] => Top1 curve: [83.5, 76.2, 75.5, 70.1, 66.14, 64.8, 63.79, 61.22, 60.68, 59.61]
2025-05-19 23:05:11,165 [trainer.py] => Finishing run
2025-05-19 23:05:11,165 [trainer.py] => 
