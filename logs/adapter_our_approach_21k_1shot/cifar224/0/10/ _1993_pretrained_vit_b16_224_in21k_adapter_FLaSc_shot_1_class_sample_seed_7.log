2025-05-19 23:40:43,061 [trainer.py] => Starting new run
2025-05-19 23:40:43,061 [trainer.py] => ID: 1
2025-05-19 23:40:43,061 [trainer.py] => dataset: cifar224
2025-05-19 23:40:43,061 [trainer.py] => shuffle: True
2025-05-19 23:40:43,061 [trainer.py] => init_cls: 10
2025-05-19 23:40:43,061 [trainer.py] => increment: 10
2025-05-19 23:40:43,061 [trainer.py] => model_name: adapter
2025-05-19 23:40:43,061 [trainer.py] => convnet_type: pretrained_vit_b16_224_in21k_adapter
2025-05-19 23:40:43,061 [trainer.py] => device: [device(type='cuda', index=0)]
2025-05-19 23:40:43,062 [trainer.py] => seed: 1993
2025-05-19 23:40:43,062 [trainer.py] => batch_size: 50
2025-05-19 23:40:43,062 [trainer.py] => tuned_epoch: 20
2025-05-19 23:40:43,062 [trainer.py] => body_lr: 0.01
2025-05-19 23:40:43,062 [trainer.py] => head_lr: 0.01
2025-05-19 23:40:43,062 [trainer.py] => weight_decay: 0.0005
2025-05-19 23:40:43,062 [trainer.py] => min_lr: 0.0
2025-05-19 23:40:43,062 [trainer.py] => use_RP: True
2025-05-19 23:40:43,062 [trainer.py] => M: 10000
2025-05-19 23:40:43,062 [trainer.py] => use_input_norm: False
2025-05-19 23:40:43,062 [trainer.py] => meta: True
2025-05-19 23:40:43,062 [trainer.py] => exp_details: FLaSc
2025-05-19 23:40:43,062 [trainer.py] => do_not_save: False
2025-05-19 23:40:43,062 [trainer.py] => seed_path: ./subsets/cifar100/shot1_seed7.txt
2025-05-19 23:40:43,062 [trainer.py] => class_samples_seed: 7
2025-05-19 23:40:43,062 [trainer.py] => shot: 1
2025-05-19 23:40:44,724 [_builder.py] => Loading pretrained weights from Hugging Face hub (timm/vit_base_patch16_224.augreg_in21k)
2025-05-19 23:40:45,321 [_hub.py] => [timm/vit_base_patch16_224.augreg_in21k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
2025-05-19 23:40:46,301 [data_manager.py] => Class Order: [68,56,78,8,23,84,90,65,74,76,40,89,3,92,55,9,26,80,43,38,58,70,77,1,85,19,17,50,28,53,13,81,45,82,6,59,83,16,15,44,91,41,72,60,79,52,20,10,31,54,37,95,14,71,96,98,97,2,64,66,42,22,35,86,24,34,87,21,99,0,88,27,18,94,11,12,47,25,30,46,62,69,36,61,7,63,75,5,32,4,51,48,73,93,39,67,29,49,57,33]
2025-05-19 23:40:46,315 [trainer.py] => Pre-trained network parameters: 86988288
2025-05-19 23:40:47,252 [FLaSc.py] => Starting CIL Task 1
2025-05-19 23:40:47,252 [FLaSc.py] => Learning on classes 0-9
2025-05-19 23:40:47,254 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:40:47,254 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:40:47,254 [FLaSc.py] => len_test data : 1000
2025-05-19 23:40:47,254 [FLaSc.py] => classes learning unique, count: (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:40:47,315 [FLaSc.py] => 86,995,969 total parameters.
2025-05-19 23:40:47,315 [FLaSc.py] => 1,197,313 training parameters.
2025-05-19 23:40:47,316 [FLaSc.py] => Starting PETL training on first task using adapter method
2025-05-19 23:40:47,316 [FLaSc.py] => Training Started with self -supervised loss......
2025-05-19 23:40:47,316 [FLaSc.py] => Weight scale value mse ...... 1.0
2025-05-19 23:42:53,746 [FLaSc.py] => Task 0, Epoch 20/20 => Loss 0.857, Train_accy 0.00, Test_accy 7.50
2025-05-19 23:43:04,999 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:43:05,591 [FLaSc.py] => 87,088,289 total parameters.
2025-05-19 23:43:05,592 [FLaSc.py] => 100,001 training parameters.
2025-05-19 23:43:10,059 [trainer.py] => Group Accuracies after this task: {'00-09': 89.3}
2025-05-19 23:43:10,059 [trainer.py] => Ave Acc curve: [89.3]
2025-05-19 23:43:10,059 [trainer.py] => Ave Inc Acc curve: 89.3
2025-05-19 23:43:10,059 [trainer.py] => Top1 curve: [89.3]
2025-05-19 23:43:10,060 [FLaSc.py] => Starting CIL Task 2
2025-05-19 23:43:10,060 [FLaSc.py] => Learning on classes 10-19
2025-05-19 23:43:10,065 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:43:10,065 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:43:10,065 [FLaSc.py] => len_test data : 2000
2025-05-19 23:43:10,065 [FLaSc.py] => classes learning unique, count: (array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:43:21,109 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:43:21,703 [FLaSc.py] => 87,188,289 total parameters.
2025-05-19 23:43:21,704 [FLaSc.py] => 200,001 training parameters.
2025-05-19 23:43:29,650 [trainer.py] => Group Accuracies after this task: {'00-09': 82.2, '10-19': 74.0}
2025-05-19 23:43:29,650 [trainer.py] => Ave Acc curve: [89.3, 78.1]
2025-05-19 23:43:29,650 [trainer.py] => Ave Inc Acc curve: 83.69999999999999
2025-05-19 23:43:29,650 [trainer.py] => Top1 curve: [89.3, 78.1]
2025-05-19 23:43:29,651 [FLaSc.py] => Starting CIL Task 3
2025-05-19 23:43:29,651 [FLaSc.py] => Learning on classes 20-29
2025-05-19 23:43:29,657 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:43:29,657 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:43:29,657 [FLaSc.py] => len_test data : 3000
2025-05-19 23:43:29,658 [FLaSc.py] => classes learning unique, count: (array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:43:40,673 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:43:41,270 [FLaSc.py] => 87,288,289 total parameters.
2025-05-19 23:43:41,270 [FLaSc.py] => 300,001 training parameters.
2025-05-19 23:43:52,252 [trainer.py] => Group Accuracies after this task: {'00-09': 76.7, '10-19': 72.7, '20-29': 56.0}
2025-05-19 23:43:52,253 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47]
2025-05-19 23:43:52,253 [trainer.py] => Ave Inc Acc curve: 78.62333333333332
2025-05-19 23:43:52,253 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47]
2025-05-19 23:43:52,253 [FLaSc.py] => Starting CIL Task 4
2025-05-19 23:43:52,253 [FLaSc.py] => Learning on classes 30-39
2025-05-19 23:43:52,264 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:43:52,265 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:43:52,265 [FLaSc.py] => len_test data : 4000
2025-05-19 23:43:52,265 [FLaSc.py] => classes learning unique, count: (array([30, 31, 32, 33, 34, 35, 36, 37, 38, 39]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:44:03,399 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:44:03,995 [FLaSc.py] => 87,388,289 total parameters.
2025-05-19 23:44:03,995 [FLaSc.py] => 400,001 training parameters.
2025-05-19 23:44:17,761 [trainer.py] => Group Accuracies after this task: {'00-09': 70.9, '10-19': 60.1, '20-29': 51.0, '30-39': 77.3}
2025-05-19 23:44:17,761 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82]
2025-05-19 23:44:17,761 [trainer.py] => Ave Inc Acc curve: 75.17249999999999
2025-05-19 23:44:17,761 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82]
2025-05-19 23:44:17,762 [FLaSc.py] => Starting CIL Task 5
2025-05-19 23:44:17,762 [FLaSc.py] => Learning on classes 40-49
2025-05-19 23:44:17,774 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:44:17,775 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:44:17,775 [FLaSc.py] => len_test data : 5000
2025-05-19 23:44:17,775 [FLaSc.py] => classes learning unique, count: (array([40, 41, 42, 43, 44, 45, 46, 47, 48, 49]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:44:28,947 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:44:29,547 [FLaSc.py] => 87,488,289 total parameters.
2025-05-19 23:44:29,547 [FLaSc.py] => 500,001 training parameters.
2025-05-19 23:44:45,921 [trainer.py] => Group Accuracies after this task: {'00-09': 67.7, '10-19': 58.4, '20-29': 49.1, '30-39': 74.7, '40-49': 64.1}
2025-05-19 23:44:45,921 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8]
2025-05-19 23:44:45,921 [trainer.py] => Ave Inc Acc curve: 72.698
2025-05-19 23:44:45,921 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8]
2025-05-19 23:44:45,922 [FLaSc.py] => Starting CIL Task 6
2025-05-19 23:44:45,922 [FLaSc.py] => Learning on classes 50-59
2025-05-19 23:44:45,936 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:44:45,936 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:44:45,936 [FLaSc.py] => len_test data : 6000
2025-05-19 23:44:45,936 [FLaSc.py] => classes learning unique, count: (array([50, 51, 52, 53, 54, 55, 56, 57, 58, 59]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:44:57,093 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:44:57,694 [FLaSc.py] => 87,588,289 total parameters.
2025-05-19 23:44:57,695 [FLaSc.py] => 600,001 training parameters.
2025-05-19 23:45:16,642 [trainer.py] => Group Accuracies after this task: {'00-09': 62.9, '10-19': 56.1, '20-29': 46.8, '30-39': 70.7, '40-49': 60.3, '50-59': 62.1}
2025-05-19 23:45:16,642 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82]
2025-05-19 23:45:16,642 [trainer.py] => Ave Inc Acc curve: 70.55166666666666
2025-05-19 23:45:16,642 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82]
2025-05-19 23:45:16,643 [FLaSc.py] => Starting CIL Task 7
2025-05-19 23:45:16,643 [FLaSc.py] => Learning on classes 60-69
2025-05-19 23:45:16,660 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:45:16,660 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:45:16,660 [FLaSc.py] => len_test data : 7000
2025-05-19 23:45:16,660 [FLaSc.py] => classes learning unique, count: (array([60, 61, 62, 63, 64, 65, 66, 67, 68, 69]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:45:27,769 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:45:28,370 [FLaSc.py] => 87,688,289 total parameters.
2025-05-19 23:45:28,371 [FLaSc.py] => 700,001 training parameters.
2025-05-19 23:45:49,865 [trainer.py] => Group Accuracies after this task: {'00-09': 62.2, '10-19': 55.3, '20-29': 46.2, '30-39': 69.2, '40-49': 59.9, '50-59': 60.4, '60-69': 72.2}
2025-05-19 23:45:49,866 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77]
2025-05-19 23:45:49,866 [trainer.py] => Ave Inc Acc curve: 69.1542857142857
2025-05-19 23:45:49,866 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77]
2025-05-19 23:45:49,866 [FLaSc.py] => Starting CIL Task 8
2025-05-19 23:45:49,867 [FLaSc.py] => Learning on classes 70-79
2025-05-19 23:45:49,885 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:45:49,885 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:45:49,885 [FLaSc.py] => len_test data : 8000
2025-05-19 23:45:49,886 [FLaSc.py] => classes learning unique, count: (array([70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:46:01,051 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:46:01,649 [FLaSc.py] => 87,788,289 total parameters.
2025-05-19 23:46:01,649 [FLaSc.py] => 800,001 training parameters.
2025-05-19 23:46:25,937 [trainer.py] => Group Accuracies after this task: {'00-09': 60.5, '10-19': 55.4, '20-29': 45.7, '30-39': 69.0, '40-49': 59.9, '50-59': 53.5, '60-69': 68.8, '70-79': 46.3}
2025-05-19 23:46:25,937 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39]
2025-05-19 23:46:25,937 [trainer.py] => Ave Inc Acc curve: 67.68374999999999
2025-05-19 23:46:25,937 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39]
2025-05-19 23:46:25,938 [FLaSc.py] => Starting CIL Task 9
2025-05-19 23:46:25,938 [FLaSc.py] => Learning on classes 80-89
2025-05-19 23:46:25,962 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:46:25,963 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:46:25,963 [FLaSc.py] => len_test data : 9000
2025-05-19 23:46:25,963 [FLaSc.py] => classes learning unique, count: (array([80, 81, 82, 83, 84, 85, 86, 87, 88, 89]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:46:37,057 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:46:37,659 [FLaSc.py] => 87,888,289 total parameters.
2025-05-19 23:46:37,660 [FLaSc.py] => 900,001 training parameters.
2025-05-19 23:47:04,441 [trainer.py] => Group Accuracies after this task: {'00-09': 59.5, '10-19': 52.4, '20-29': 45.6, '30-39': 69.1, '40-49': 56.3, '50-59': 52.6, '60-69': 67.9, '70-79': 44.6, '80-89': 63.1}
2025-05-19 23:47:04,441 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39, 56.79]
2025-05-19 23:47:04,441 [trainer.py] => Ave Inc Acc curve: 66.47333333333331
2025-05-19 23:47:04,441 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39, 56.79]
2025-05-19 23:47:04,442 [FLaSc.py] => Starting CIL Task 10
2025-05-19 23:47:04,442 [FLaSc.py] => Learning on classes 90-99
2025-05-19 23:47:04,462 [FLaSc.py] => len_supervised data : 10
2025-05-19 23:47:04,463 [FLaSc.py] => len supervised data for G inc calculation : 10
2025-05-19 23:47:04,463 [FLaSc.py] => len_test data : 10000
2025-05-19 23:47:04,463 [FLaSc.py] => classes learning unique, count: (array([90, 91, 92, 93, 94, 95, 96, 97, 98, 99]), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
2025-05-19 23:47:15,641 [FLaSc.py] => Optimal lambda for shot 1: 100000000.0
2025-05-19 23:47:16,248 [FLaSc.py] => 87,988,289 total parameters.
2025-05-19 23:47:16,249 [FLaSc.py] => 1,000,001 training parameters.
2025-05-19 23:47:45,897 [trainer.py] => Group Accuracies after this task: {'00-09': 58.8, '10-19': 52.7, '20-29': 45.6, '30-39': 68.1, '40-49': 55.6, '50-59': 52.0, '60-69': 67.1, '70-79': 41.3, '80-89': 63.1, '90-99': 54.7}
2025-05-19 23:47:45,897 [trainer.py] => Ave Acc curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39, 56.79, 55.9]
2025-05-19 23:47:45,897 [trainer.py] => Ave Inc Acc curve: 65.41599999999998
2025-05-19 23:47:45,897 [trainer.py] => Top1 curve: [89.3, 78.1, 68.47, 64.82, 62.8, 59.82, 60.77, 57.39, 56.79, 55.9]
2025-05-19 23:47:45,897 [trainer.py] => Finishing run
2025-05-19 23:47:45,897 [trainer.py] => 
